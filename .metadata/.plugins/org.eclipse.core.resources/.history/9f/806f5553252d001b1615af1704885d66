//***********************************************************************************
// Include files
//***********************************************************************************
#include "em_cmu.h"
#include "scheduler.h"
#include "sleep_routines.h"
#include "HW_delay.h"

//***********************************************************************************
// defined files
//***********************************************************************************
#define DPLL_EM				EM1
#define DPLL_ENABLE			0xC
#define HFRCO_FINETUNING	0x1B

//***********************************************************************************
// global variables
//***********************************************************************************

typedef struct {
  uint32_t  				frequency;      /**< PLL frequency value, max 40 MHz. */
  uint16_t  				n;              /**< Factor N. 300 <= N <= 4095       */
  uint16_t  				m;              /**< Factor M. M <= 4095              */
  uint8_t   				ssInterval;     /**< Spread spectrum update interval. */
  uint8_t   				ssAmplitude;	/**< Spread spectrum amplitude.       */
  CMU_DPLLClkSel_TypeDef    refClk;     	/**< Reference clock selector.        */
  CMU_DPLLEdgeSel_TypeDef   edgeSel;    	/**< Reference clock edge detect selector. */
  CMU_DPLLLockMode_TypeDef  lockMode;   	/**< DPLL lock mode selector.         */
  bool      				autoRecover;	/**< Enable automatic lock recovery.  */
  uint32_t					lock_done_evt;
  uint32_t					unlock_done_evt;
 // uint32_t					rdy_evt;
  uint8_t					out_pin_route0;		// out 1 route to gpio port/pin
  bool						out_pin_0_en;		// enable out 1 route

} APP_DPLL_TypeDef;

//***********************************************************************************
// function prototypes
//***********************************************************************************
void dpll_open(APP_DPLL_TypeDef *app_dpll_struct);
void dpll_start(void);
void CMU_IRQHandler(void);
void dpll_clk_enable(void);
void dpll_unlock(void);
